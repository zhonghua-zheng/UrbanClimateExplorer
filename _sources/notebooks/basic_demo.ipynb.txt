{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dd3f8e4a-6a62-4434-a7aa-8cf913527976",
   "metadata": {},
   "source": [
    "Tutorial at:     \n",
    "- GitHub: https://github.com/ncar/cesm-lens-aws/   \n",
    "- Reproduce CESM-LENS: http://gallery.pangeo.io/repos/NCAR/cesm-lens-aws/notebooks/kay-et-al-2015.v3.html    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "insured-finnish",
   "metadata": {},
   "source": [
    "## Step 0: load necessary packages and define parameters (no need to change)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a851a64a-c5db-4fb8-b226-d249cc2679bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--> The keys in the returned dictionary of datasets are constructed as follows:\n",
      "\t'component.experiment.frequency'\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "        <style>\n",
       "            /* Turns off some styling */\n",
       "            progress {\n",
       "                /* gets rid of default border in Firefox and Opera. */\n",
       "                border: none;\n",
       "                /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "                background-size: auto;\n",
       "            }\n",
       "            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "                background: #F44336;\n",
       "            }\n",
       "        </style>\n",
       "      <progress value='2' class='' max='2' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      100.00% [2/2 00:01<00:00]\n",
       "    </div>\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1min 7s, sys: 47.4 s, total: 1min 54s\n",
      "Wall time: 35 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# Display output of plots directly in Notebook\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import json\n",
    "from flaml import AutoML\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "import util\n",
    "\n",
    "with open(\"./config.json\",'r') as load_f:\n",
    "#     param = json.loads(json.load(load_f))\n",
    "    param = json.load(load_f)\n",
    "    \n",
    "    city_loc = param[\"city_loc\"]\n",
    "    catalog_url = param[\"catalog_url\"]\n",
    "    l_component = param[\"l_component\"]\n",
    "    a_component = param[\"a_component\"]\n",
    "    experiment = param[\"experiment\"]\n",
    "    frequency = param[\"frequency\"]\n",
    "    cam_ls = param[\"cam_ls\"]\n",
    "    clm_ls = param[\"clm_ls\"]\n",
    "    time = slice(param[\"time_start\"],param[\"time_end\"])\n",
    "    member_id = param[\"member_id\"]\n",
    "    estimator_list = param[\"estimator_list\"]\n",
    "    time_budget = param[\"time_budget\"]\n",
    "    features = param[\"features\"]\n",
    "    label = param[\"label\"]\n",
    "    \n",
    "# get a dataset\n",
    "ds = util.get_data(city_loc, experiment, frequency, member_id, time, cam_ls, clm_ls, \n",
    "                   a_component=\"atm\", l_component=\"lnd\", mask_path = \"./urban_mask.nc\")\n",
    "\n",
    "# create a dataframe\n",
    "ds['time'] = ds.indexes['time'].to_datetimeindex()\n",
    "df = ds.to_dataframe().reset_index().dropna()\n",
    "\n",
    "if \"PRSN\" in features:\n",
    "    df[\"PRSN\"] = df[\"PRECSC\"] + df[\"PRECSL\"]\n",
    "    \n",
    "# setup for automl\n",
    "automl = AutoML()\n",
    "automl_settings = {\n",
    "    \"time_budget\": time_budget,  # in seconds\n",
    "    \"metric\": 'r2',\n",
    "    \"task\": 'regression',\n",
    "    \"estimator_list\":estimator_list,\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "productive-negative",
   "metadata": {},
   "source": [
    "## Step 1: data analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "mechanical-metabolism",
   "metadata": {},
   "source": [
    "**xarray.Dataset**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "square-amateur",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: 'â–º';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: 'â–¼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt;\n",
       "Dimensions:     (member_id: 1, time: 7299)\n",
       "Coordinates:\n",
       "    lon         float64 -88.75\n",
       "  * member_id   (member_id) int64 2\n",
       "    lat         float64 40.05\n",
       "  * time        (time) datetime64[ns] 2081-01-02T12:00:00 ... 2100-12-31T12:0...\n",
       "Data variables:\n",
       "    TREFHT      (member_id, time) float32 267.5 267.7 275.7 ... 280.6 278.0\n",
       "    TREFHTMX    (member_id, time) float32 270.9 276.0 283.8 ... 289.3 285.7\n",
       "    FLNS        (member_id, time) float32 67.13 75.71 53.1 ... 72.42 71.2 62.57\n",
       "    FSNS        (member_id, time) float32 93.39 89.37 88.2 ... 83.75 89.64 77.89\n",
       "    PRECSC      (member_id, time) float32 0.0 0.0 0.0 0.0 ... 0.0 0.0 0.0 0.0\n",
       "    PRECSL      (member_id, time) float32 3.048e-09 8.637e-10 ... 0.0 0.0\n",
       "    PRECT       (member_id, time) float32 3.048e-09 8.637e-10 ... 4.164e-10\n",
       "    QBOT        (member_id, time) float32 0.001285 0.001422 ... 0.004192\n",
       "    UBOT        (member_id, time) float32 7.931 1.266 -1.619 ... 3.694 -0.1972\n",
       "    VBOT        (member_id, time) float32 0.4976 2.597 5.257 ... 1.785 0.1336\n",
       "    TREFMXAV_U  (member_id, time) float32 291.6 271.9 276.9 ... 288.4 289.4</pre><div class='xr-wrap' hidden><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-2d09dcb8-523e-4793-afd4-3d9fc9fa8df5' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-2d09dcb8-523e-4793-afd4-3d9fc9fa8df5' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>member_id</span>: 1</li><li><span class='xr-has-index'>time</span>: 7299</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-72377582-beb8-4e7e-afc2-34465a9c468d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-72377582-beb8-4e7e-afc2-34465a9c468d' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>lon</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-88.75</div><input id='attrs-fad6b5c0-da00-4804-8966-3b4c6c2c1be6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fad6b5c0-da00-4804-8966-3b4c6c2c1be6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ae31840c-897e-4190-9163-dc56c3ebd4f4' class='xr-var-data-in' type='checkbox'><label for='data-ae31840c-897e-4190-9163-dc56c3ebd4f4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array(-88.75)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>member_id</span></div><div class='xr-var-dims'>(member_id)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>2</div><input id='attrs-8ec7e23a-f86c-4622-b25a-7e170f9e495a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8ec7e23a-f86c-4622-b25a-7e170f9e495a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-32f25ebe-559b-4e80-97cf-c34b29de4663' class='xr-var-data-in' type='checkbox'><label for='data-32f25ebe-559b-4e80-97cf-c34b29de4663' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([2])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>lat</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>40.05</div><input id='attrs-ba7b7267-cc19-4a6d-a722-1bb2735e81cb' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ba7b7267-cc19-4a6d-a722-1bb2735e81cb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9c08c6fd-0ebe-41ce-b411-4bfa7945eb62' class='xr-var-data-in' type='checkbox'><label for='data-9c08c6fd-0ebe-41ce-b411-4bfa7945eb62' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>Y</dd><dt><span>bounds :</span></dt><dd>lat_bnds</dd><dt><span>long_name :</span></dt><dd>latitude</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd></dl></div><div class='xr-var-data'><pre>array(40.05235672)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2081-01-02T12:00:00 ... 2100-12-...</div><input id='attrs-af662351-51f6-4db7-a61b-3d349099e16d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-af662351-51f6-4db7-a61b-3d349099e16d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a802148b-1f52-4def-9308-0ac460f3932e' class='xr-var-data-in' type='checkbox'><label for='data-a802148b-1f52-4def-9308-0ac460f3932e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2081-01-02T12:00:00.000000000&#x27;, &#x27;2081-01-03T12:00:00.000000000&#x27;,\n",
       "       &#x27;2081-01-04T12:00:00.000000000&#x27;, ..., &#x27;2100-12-29T12:00:00.000000000&#x27;,\n",
       "       &#x27;2100-12-30T12:00:00.000000000&#x27;, &#x27;2100-12-31T12:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-13175e6c-299f-4418-b16b-11d0fbcdbad6' class='xr-section-summary-in' type='checkbox'  checked><label for='section-13175e6c-299f-4418-b16b-11d0fbcdbad6' class='xr-section-summary' >Data variables: <span>(11)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>TREFHT</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>267.5 267.7 275.7 ... 280.6 278.0</div><input id='attrs-81fda861-c2c8-4711-ac43-c0f4b1dde4fe' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-81fda861-c2c8-4711-ac43-c0f4b1dde4fe' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-149abc92-1220-4a3b-a316-3f3fe51fe1d1' class='xr-var-data-in' type='checkbox'><label for='data-149abc92-1220-4a3b-a316-3f3fe51fe1d1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Reference height temperature</dd><dt><span>units :</span></dt><dd>K</dd></dl></div><div class='xr-var-data'><pre>array([[267.53082, 267.6877 , 275.67203, ..., 279.2156 , 280.643  ,\n",
       "        278.0016 ]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>TREFHTMX</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>270.9 276.0 283.8 ... 289.3 285.7</div><input id='attrs-5792dfb7-cdf7-42ae-8527-e2b075b1d6ec' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5792dfb7-cdf7-42ae-8527-e2b075b1d6ec' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-58e0a5a3-8766-4597-894f-f5044c36e007' class='xr-var-data-in' type='checkbox'><label for='data-58e0a5a3-8766-4597-894f-f5044c36e007' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: maximum</dd><dt><span>long_name :</span></dt><dd>Maximum reference height temperature over output period</dd><dt><span>units :</span></dt><dd>K</dd></dl></div><div class='xr-var-data'><pre>array([[270.85828, 276.01318, 283.7991 , ..., 287.9728 , 289.29352,\n",
       "        285.68597]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>FLNS</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>67.13 75.71 53.1 ... 71.2 62.57</div><input id='attrs-4bc1a5f8-c622-4259-adc4-4e2ef0429811' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4bc1a5f8-c622-4259-adc4-4e2ef0429811' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2d440526-e844-4373-88cd-dcbd68f05725' class='xr-var-data-in' type='checkbox'><label for='data-2d440526-e844-4373-88cd-dcbd68f05725' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>Sampling_Sequence :</span></dt><dd>rad_lwsw</dd><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Net longwave flux at surface</dd><dt><span>units :</span></dt><dd>W/m2</dd></dl></div><div class='xr-var-data'><pre>array([[67.12792 , 75.70777 , 53.098457, ..., 72.4231  , 71.20017 ,\n",
       "        62.573097]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>FSNS</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>93.39 89.37 88.2 ... 89.64 77.89</div><input id='attrs-5fac636a-0bff-4e65-804b-aaf593da9c85' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5fac636a-0bff-4e65-804b-aaf593da9c85' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7a2bdfe8-d0b5-4076-81d4-fc133fe60381' class='xr-var-data-in' type='checkbox'><label for='data-7a2bdfe8-d0b5-4076-81d4-fc133fe60381' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>Sampling_Sequence :</span></dt><dd>rad_lwsw</dd><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Net solar flux at surface</dd><dt><span>units :</span></dt><dd>W/m2</dd></dl></div><div class='xr-var-data'><pre>array([[93.389015, 89.367584, 88.20241 , ..., 83.74923 , 89.643875,\n",
       "        77.89158 ]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PRECSC</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.0 0.0 ... 0.0 0.0 0.0 0.0</div><input id='attrs-855c357c-b265-4eaa-a590-219fb4368755' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-855c357c-b265-4eaa-a590-219fb4368755' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b5b4d6d1-aa45-4a90-8ddb-b66ad713b77f' class='xr-var-data-in' type='checkbox'><label for='data-b5b4d6d1-aa45-4a90-8ddb-b66ad713b77f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Convective snow rate (water equivalent)</dd><dt><span>units :</span></dt><dd>m/s</dd></dl></div><div class='xr-var-data'><pre>array([[0., 0., 0., ..., 0., 0., 0.]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PRECSL</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>3.048e-09 8.637e-10 ... 0.0 0.0</div><input id='attrs-56533844-4d0e-4859-8128-4fd0ea72e6ba' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-56533844-4d0e-4859-8128-4fd0ea72e6ba' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b6af6caf-1d72-4ec9-82b7-90d8f84226d0' class='xr-var-data-in' type='checkbox'><label for='data-b6af6caf-1d72-4ec9-82b7-90d8f84226d0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Large-scale (stable) snow rate (water equivalent)</dd><dt><span>units :</span></dt><dd>m/s</dd></dl></div><div class='xr-var-data'><pre>array([[3.047973e-09, 8.636923e-10, 1.331122e-09, ..., 0.000000e+00,\n",
       "        0.000000e+00, 0.000000e+00]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>PRECT</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>3.048e-09 8.637e-10 ... 4.164e-10</div><input id='attrs-30bfc1b5-d547-4e8d-bf34-b9e79d2c5171' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-30bfc1b5-d547-4e8d-bf34-b9e79d2c5171' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-81766376-fd5e-4cf8-a9f2-31e3a3fa78ea' class='xr-var-data-in' type='checkbox'><label for='data-81766376-fd5e-4cf8-a9f2-31e3a3fa78ea' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Total (convective and large-scale) precipitation rate (liq + ice)</dd><dt><span>units :</span></dt><dd>m/s</dd></dl></div><div class='xr-var-data'><pre>array([[3.0479730e-09, 8.6370522e-10, 2.9007619e-09, ..., 9.5072794e-10,\n",
       "        4.6768678e-10, 4.1641376e-10]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>QBOT</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.001285 0.001422 ... 0.004192</div><input id='attrs-1744f89b-67ff-4306-bce0-09d8cd1bf857' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1744f89b-67ff-4306-bce0-09d8cd1bf857' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0e3dea78-7d7f-4de9-baee-5c1bedf588cb' class='xr-var-data-in' type='checkbox'><label for='data-0e3dea78-7d7f-4de9-baee-5c1bedf588cb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Lowest model level water vapor mixing ratio</dd><dt><span>units :</span></dt><dd>kg/kg</dd></dl></div><div class='xr-var-data'><pre>array([[0.00128525, 0.00142246, 0.00188326, ..., 0.00491805, 0.00424695,\n",
       "        0.00419243]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>UBOT</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>7.931 1.266 ... 3.694 -0.1972</div><input id='attrs-29e33333-6e3a-4645-b8de-e687eeb799bb' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-29e33333-6e3a-4645-b8de-e687eeb799bb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-448f3f3c-d2d4-44e5-b79a-c04f3b6e67ba' class='xr-var-data-in' type='checkbox'><label for='data-448f3f3c-d2d4-44e5-b79a-c04f3b6e67ba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Lowest model level zonal wind</dd><dt><span>units :</span></dt><dd>m/s</dd></dl></div><div class='xr-var-data'><pre>array([[ 7.930864 ,  1.265992 , -1.6188226, ...,  3.2223969,  3.6941586,\n",
       "        -0.1971534]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>VBOT</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.4976 2.597 5.257 ... 1.785 0.1336</div><input id='attrs-bf772083-f79a-4110-86e7-481123ab7730' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bf772083-f79a-4110-86e7-481123ab7730' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c3998eb3-e15c-48da-94b3-fd3e5bdb509c' class='xr-var-data-in' type='checkbox'><label for='data-c3998eb3-e15c-48da-94b3-fd3e5bdb509c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Lowest model level meridional wind</dd><dt><span>units :</span></dt><dd>m/s</dd></dl></div><div class='xr-var-data'><pre>array([[0.49764532, 2.5973995 , 5.2567043 , ..., 1.611054  , 1.7851651 ,\n",
       "        0.13360208]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>TREFMXAV_U</span></div><div class='xr-var-dims'>(member_id, time)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>291.6 271.9 276.9 ... 288.4 289.4</div><input id='attrs-3d3ac6ac-2ce1-473b-9630-ec0736f3cba6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3d3ac6ac-2ce1-473b-9630-ec0736f3cba6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-90e4f3bd-9d22-4d17-9e04-0fadbfeeff13' class='xr-var-data-in' type='checkbox'><label for='data-90e4f3bd-9d22-4d17-9e04-0fadbfeeff13' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>cell_methods :</span></dt><dd>time: mean</dd><dt><span>long_name :</span></dt><dd>Urban daily maximum of average 2-m temperature</dd><dt><span>units :</span></dt><dd>K</dd></dl></div><div class='xr-var-data'><pre>array([[291.56638, 271.86142, 276.85135, ..., 290.03763, 288.39868,\n",
       "        289.41516]], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-46061bfe-e209-438c-b525-4e2f544c565e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-46061bfe-e209-438c-b525-4e2f544c565e' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:     (member_id: 1, time: 7299)\n",
       "Coordinates:\n",
       "    lon         float64 -88.75\n",
       "  * member_id   (member_id) int64 2\n",
       "    lat         float64 40.05\n",
       "  * time        (time) datetime64[ns] 2081-01-02T12:00:00 ... 2100-12-31T12:0...\n",
       "Data variables:\n",
       "    TREFHT      (member_id, time) float32 267.5 267.7 275.7 ... 280.6 278.0\n",
       "    TREFHTMX    (member_id, time) float32 270.9 276.0 283.8 ... 289.3 285.7\n",
       "    FLNS        (member_id, time) float32 67.13 75.71 53.1 ... 72.42 71.2 62.57\n",
       "    FSNS        (member_id, time) float32 93.39 89.37 88.2 ... 83.75 89.64 77.89\n",
       "    PRECSC      (member_id, time) float32 0.0 0.0 0.0 0.0 ... 0.0 0.0 0.0 0.0\n",
       "    PRECSL      (member_id, time) float32 3.048e-09 8.637e-10 ... 0.0 0.0\n",
       "    PRECT       (member_id, time) float32 3.048e-09 8.637e-10 ... 4.164e-10\n",
       "    QBOT        (member_id, time) float32 0.001285 0.001422 ... 0.004192\n",
       "    UBOT        (member_id, time) float32 7.931 1.266 -1.619 ... 3.694 -0.1972\n",
       "    VBOT        (member_id, time) float32 0.4976 2.597 5.257 ... 1.785 0.1336\n",
       "    TREFMXAV_U  (member_id, time) float32 291.6 271.9 276.9 ... 288.4 289.4"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "breeding-junior",
   "metadata": {},
   "source": [
    "**pandas dataframe**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "86c130d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>member_id</th>\n",
       "      <th>time</th>\n",
       "      <th>lon</th>\n",
       "      <th>TREFHT</th>\n",
       "      <th>TREFHTMX</th>\n",
       "      <th>FLNS</th>\n",
       "      <th>FSNS</th>\n",
       "      <th>PRECSC</th>\n",
       "      <th>PRECSL</th>\n",
       "      <th>PRECT</th>\n",
       "      <th>QBOT</th>\n",
       "      <th>UBOT</th>\n",
       "      <th>VBOT</th>\n",
       "      <th>lat</th>\n",
       "      <th>TREFMXAV_U</th>\n",
       "      <th>PRSN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>2081-01-02 12:00:00</td>\n",
       "      <td>-88.75</td>\n",
       "      <td>267.530823</td>\n",
       "      <td>270.858276</td>\n",
       "      <td>67.127922</td>\n",
       "      <td>93.389015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.047973e-09</td>\n",
       "      <td>3.047973e-09</td>\n",
       "      <td>0.001285</td>\n",
       "      <td>7.930864</td>\n",
       "      <td>0.497645</td>\n",
       "      <td>40.052357</td>\n",
       "      <td>291.566376</td>\n",
       "      <td>3.047973e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2081-01-03 12:00:00</td>\n",
       "      <td>-88.75</td>\n",
       "      <td>267.687714</td>\n",
       "      <td>276.013184</td>\n",
       "      <td>75.707771</td>\n",
       "      <td>89.367584</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.636923e-10</td>\n",
       "      <td>8.637052e-10</td>\n",
       "      <td>0.001422</td>\n",
       "      <td>1.265992</td>\n",
       "      <td>2.597399</td>\n",
       "      <td>40.052357</td>\n",
       "      <td>271.861420</td>\n",
       "      <td>8.636923e-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2081-01-04 12:00:00</td>\n",
       "      <td>-88.75</td>\n",
       "      <td>275.672028</td>\n",
       "      <td>283.799103</td>\n",
       "      <td>53.098457</td>\n",
       "      <td>88.202408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.331122e-09</td>\n",
       "      <td>2.900762e-09</td>\n",
       "      <td>0.001883</td>\n",
       "      <td>-1.618823</td>\n",
       "      <td>5.256704</td>\n",
       "      <td>40.052357</td>\n",
       "      <td>276.851349</td>\n",
       "      <td>1.331122e-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>2081-01-05 12:00:00</td>\n",
       "      <td>-88.75</td>\n",
       "      <td>276.890686</td>\n",
       "      <td>284.918884</td>\n",
       "      <td>38.585438</td>\n",
       "      <td>43.366203</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.297357e-09</td>\n",
       "      <td>0.004626</td>\n",
       "      <td>-2.739517</td>\n",
       "      <td>5.846395</td>\n",
       "      <td>40.052357</td>\n",
       "      <td>284.498749</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2081-01-06 12:00:00</td>\n",
       "      <td>-88.75</td>\n",
       "      <td>287.462036</td>\n",
       "      <td>291.275452</td>\n",
       "      <td>7.098297</td>\n",
       "      <td>38.443039</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.156371e-14</td>\n",
       "      <td>6.182010e-08</td>\n",
       "      <td>0.009604</td>\n",
       "      <td>-0.635833</td>\n",
       "      <td>8.809414</td>\n",
       "      <td>40.052357</td>\n",
       "      <td>285.547607</td>\n",
       "      <td>1.156371e-14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   member_id                time    lon      TREFHT    TREFHTMX       FLNS  \\\n",
       "0          2 2081-01-02 12:00:00 -88.75  267.530823  270.858276  67.127922   \n",
       "1          2 2081-01-03 12:00:00 -88.75  267.687714  276.013184  75.707771   \n",
       "2          2 2081-01-04 12:00:00 -88.75  275.672028  283.799103  53.098457   \n",
       "3          2 2081-01-05 12:00:00 -88.75  276.890686  284.918884  38.585438   \n",
       "4          2 2081-01-06 12:00:00 -88.75  287.462036  291.275452   7.098297   \n",
       "\n",
       "        FSNS  PRECSC        PRECSL         PRECT      QBOT      UBOT  \\\n",
       "0  93.389015     0.0  3.047973e-09  3.047973e-09  0.001285  7.930864   \n",
       "1  89.367584     0.0  8.636923e-10  8.637052e-10  0.001422  1.265992   \n",
       "2  88.202408     0.0  1.331122e-09  2.900762e-09  0.001883 -1.618823   \n",
       "3  43.366203     0.0  0.000000e+00  1.297357e-09  0.004626 -2.739517   \n",
       "4  38.443039     0.0  1.156371e-14  6.182010e-08  0.009604 -0.635833   \n",
       "\n",
       "       VBOT        lat  TREFMXAV_U          PRSN  \n",
       "0  0.497645  40.052357  291.566376  3.047973e-09  \n",
       "1  2.597399  40.052357  271.861420  8.636923e-10  \n",
       "2  5.256704  40.052357  276.851349  1.331122e-09  \n",
       "3  5.846395  40.052357  284.498749  0.000000e+00  \n",
       "4  8.809414  40.052357  285.547607  1.156371e-14  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "designing-asbestos",
   "metadata": {},
   "source": [
    "**data visualization**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "standing-infrared",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7efbb931e4a8>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds[\"TREFMXAV_U\"].plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "confused-affect",
   "metadata": {},
   "source": [
    "## Step 2: automated machine learning"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "defensive-footage",
   "metadata": {},
   "source": [
    "**train a model (emulator)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "clear-driver",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LGBMRegressor(colsample_bytree=0.6649148062238498,\n",
      "              learning_rate=0.17402065726724145, max_bin=255,\n",
      "              min_child_samples=3, n_estimators=93, num_leaves=15,\n",
      "              reg_alpha=0.0009765625, reg_lambda=0.006761362450996487,\n",
      "              verbose=-1)\n",
      "CPU times: user 7.62 s, sys: 14.4 s, total: 22 s\n",
      "Wall time: 15.2 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "# assume that we want to split the data into training data and testing data\n",
    "# let's use first 95% for training, and the remaining for testing \n",
    "idx = df.shape[0]\n",
    "train = df.iloc[:int(0.95*idx),:]\n",
    "test = df.iloc[int(0.95*idx):,:]\n",
    "(X_train, y_train) = (train[features], train[label].values)\n",
    "(X_test, y_test) = (test[features], test[label].values)\n",
    "\n",
    "# train the model\n",
    "automl.fit(X_train=X_train, y_train=y_train,\n",
    "           **automl_settings, verbose=-1)\n",
    "print(automl.model.estimator)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "secure-worst",
   "metadata": {},
   "source": [
    "**apply and test the machine learning model**      \n",
    "use `automl.predict(X)` to apply the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "sunrise-removal",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "model performance using training data:\n",
      "root mean square error: 1.891482463886013\n",
      "r2: 0.9646972730399841 \n",
      "\n",
      "model performance using testing data:\n",
      "root mean square error: 2.4148976103187043\n",
      "r2: 0.9496869325210374\n"
     ]
    }
   ],
   "source": [
    "# training data\n",
    "print(\"model performance using training data:\")\n",
    "y_pred = automl.predict(X_train)\n",
    "print(\"root mean square error:\", \n",
    "      mean_squared_error(y_true=y_train, y_pred=y_pred, squared=False))\n",
    "print(\"r2:\", r2_score(y_true=y_train, y_pred=y_pred),\"\\n\")\n",
    "import pandas as pd\n",
    "d_train = {\"time\":train[\"time\"],\"y_train\":y_train.reshape(-1),\"y_pred\":y_pred.reshape(-1)}\n",
    "df_train = pd.DataFrame(d_train).set_index(\"time\")\n",
    "\n",
    "# testing data\n",
    "print(\"model performance using testing data:\")\n",
    "y_pred = automl.predict(X_test)\n",
    "print(\"root mean square error:\", \n",
    "      mean_squared_error(y_true=y_test, y_pred=y_pred, squared=False))\n",
    "print(\"r2:\", r2_score(y_true=y_test, y_pred=y_pred))\n",
    "d_test = {\"time\":test[\"time\"],\"y_test\":y_test.reshape(-1),\"y_pred\":y_pred.reshape(-1)}\n",
    "df_test = pd.DataFrame(d_test).set_index(\"time\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "technical-summary",
   "metadata": {},
   "source": [
    "**visualization**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "supported-pension",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x216 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1,ax2) = plt.subplots(1,2,figsize=(12,3))\n",
    "fig.suptitle('emulator evaluation')\n",
    "df_train[\"y_train\"].plot(label=\"reference\",c=\"k\",ax=ax1)\n",
    "df_train[\"y_pred\"].plot(label=\"prediction\",c=\"r\",ax=ax1)\n",
    "ax1.set_title(\"training data\")\n",
    "ax1.set_ylabel(\"urban daily maximum temperature, K\")\n",
    "\n",
    "df_test[\"y_test\"].plot(label=\"reference\",c=\"k\",ax=ax2)\n",
    "df_test[\"y_pred\"].plot(label=\"prediction\",c=\"r\",ax=ax2)\n",
    "ax2.set_title(\"testing data\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
