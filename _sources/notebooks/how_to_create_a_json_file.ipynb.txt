{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ab58c41a",
   "metadata": {},
   "source": [
    "## How to create a JSON file?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75622f04",
   "metadata": {},
   "source": [
    "JSON is an open standard file format an data interchange format that uses human-readable text to store and transmit data object. \n",
    "\n",
    "- You can click [here](https://en.wikipedia.org/wiki/JSON) to find more information of JSON.   \n",
    "- Please check [here](https://ncar.github.io/cesm-lens-aws/#data-catalog) for CESM1 variables and [here](https://ncar.github.io/cesm2-le-aws/model_documentation.html#data-catalog) for CESM2 variables"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b800020f",
   "metadata": {},
   "source": [
    "```python\n",
    "{\n",
    "    \"model\": \"cesm1\",\n",
    "    \"urban_type\": \"md\",\n",
    "    \"city_loc\": {\"lat\": 40.1164, \"lon\": -88.2434}, \n",
    "    \"l_component\": \"lnd\",\n",
    "    \"a_component\": \"atm\",\n",
    "    \"experiment\": \"RCP85\",\n",
    "    \"frequency\": \"daily\",\n",
    "    \"cam_ls\": [\"TREFHT\", \"TREFHTMX\", \"FLNS\", \"FSNS\", \"PRECSC\", \"PRECSL\", \"PRECT\", \"QBOT\", \"UBOT\", \"VBOT\"], \n",
    "    \"clm_ls\": [\"TREFMXAV_U\"], \n",
    "    \"forcing_variant\": \"cmip6\",\n",
    "    \"time_start\": \"2081-01-02\", \n",
    "    \"time_end\": \"2100-12-31\", \n",
    "    \"member_id\": [2], \n",
    "    \"estimator_list\": [\"lgbm\", \"xgboost\", \"rf\", \"extra_tree\"], \n",
    "    \"time_budget\": 15, \n",
    "    \"features\": [\"FLNS\", \"FSNS\", \"PRECT\", \"PRSN\", \"QBOT\", \"TREFHT\", \"UBOT\", \"VBOT\"], \n",
    "    \"label\": [\"TREFMXAV_U\"]\n",
    "}\n",
    "```\n",
    "\n",
    "where\n",
    "\n",
    "```\n",
    "model : string\n",
    "    \"cesm1\" or \"cesm2\"\n",
    "urban_type : string\n",
    "    e.g., \"tbd\" (Tall Building District), \"hd\" (High Density), and \"md\" (Medium Density)\n",
    "city_loc : dict\n",
    "    a dict of a city's lat and lon that we are interested in , e.g., {'lat': 40.1164, 'lon': -88.2434}\n",
    "l_component : str, optional\n",
    "    component name of CLM, by default \"lnd\"\n",
    "a_component : str, optional\n",
    "    component name of CAM, by default \"atm\"         \n",
    "experiment : string\n",
    "    e.g., \"RCP85\" (RCP 8.5 runs)\n",
    "frequency : string\n",
    "    e.g., \"daily\" or \"monthly\"\n",
    "cam_ls : a list of string\n",
    "    CAM (atmospheric forcing) variables, e.g., [\"TREFHT\", \"TREFHTMX\", \"FLNS\", \"FSNS\"]\n",
    "clm_ls : a list of string\n",
    "    CLM (land) variables, e.g., [\"TREFMXAV_U\"] (Urban daily maximum of average 2-m temperature) \n",
    "forcing_variant : string\n",
    "    the biomass forcing variant, e.g., \n",
    "    \"cmip6\" (the default in the cmip6 runs),\n",
    "    \"smbb\" (smoothed biomass burning)\n",
    "time_start: string\n",
    "    start date, e.g., \"2081-01-02\"\n",
    "time_end: string\n",
    "    end date, e.g., \"2100-12-31\"\n",
    "member_id : a list of int\n",
    "    CESM1 large ensemble member ID, e.g., [2,3]\n",
    "estimator_list : a list of string\n",
    "    a list of strings for estimator names, e.g., [\"lgbm\", \"xgboost\", \"rf\", \"extra_tree\"], or 'auto'\n",
    "time_budget : int\n",
    "    total running time in seconds, e.g., 15\n",
    "features : a list of string\n",
    "    features (predictors) for machine learning, it should be a subset of \"cam_ls\"\n",
    "label: a list of string (currently we only support a single element within the list)\n",
    "    label for machine learning, \"label\" means something we want to predict, e.g., [\"TREFMXAV_U\"]\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55e43828",
   "metadata": {},
   "source": [
    "**How to save a JSON file using Python**\n",
    "\n",
    "Note: please pay attention to the difference between CESM1 and CESM2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "52738234",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "\n",
    "# CESM1\n",
    "cesm1 = {\n",
    "    \"model\": \"cesm1\",\n",
    "    \"urban_type\": \"md\",\n",
    "    \"city_loc\": {\"lat\": 40.1164, \"lon\": -88.2434}, \n",
    "    \"l_component\": \"lnd\",\n",
    "    \"a_component\": \"atm\",\n",
    "    \"experiment\": \"RCP85\",\n",
    "    \"frequency\": \"daily\",\n",
    "    \"cam_ls\": [\"TREFHT\", \"TREFHTMX\", \"FLNS\", \"FSNS\", \"PRECSC\", \"PRECSL\", \"PRECT\", \"QBOT\", \"UBOT\", \"VBOT\"], \n",
    "    \"clm_ls\": [\"TREFMXAV_U\"], \n",
    "    \"forcing_variant\": \"cmip6\",\n",
    "    \"time_start\": \"2081-01-02\", \n",
    "    \"time_end\": \"2100-12-31\", \n",
    "    \"member_id\": [2], \n",
    "    \"estimator_list\": [\"lgbm\", \"xgboost\", \"rf\", \"extra_tree\"], \n",
    "    \"time_budget\": 15, \n",
    "    \"features\": [\"FLNS\", \"FSNS\", \"PRECT\", \"PRSN\", \"QBOT\", \"TREFHT\", \"UBOT\", \"VBOT\"], \n",
    "    \"label\": [\"TREFMXAV_U\"]\n",
    "}\n",
    "\n",
    "# CESM2\n",
    "cesm2 = {\n",
    "    \"model\": \"cesm2\",\n",
    "    \"urban_type\": \"md\",\n",
    "    \"city_loc\": {\"lat\": 40.1164, \"lon\": -88.2434}, \n",
    "    \"l_component\": \"lnd\",\n",
    "    \"a_component\": \"atm\",\n",
    "    \"experiment\": \"ssp370\",\n",
    "    \"frequency\": \"daily\",\n",
    "    \"cam_ls\": [\"TREFHT\", \"TREFHTMX\", \"FLNS\", \"FSNS\", \"PRECSC\", \"PRECSL\", \"PRECC\", \"PRECL\"],\n",
    "    \"clm_ls\": [\"TREFMXAV\"], \n",
    "    \"forcing_variant\": \"cmip6\",\n",
    "    \"time_start\": \"2081-01-02\", \n",
    "    \"time_end\": \"2100-12-31\", \n",
    "    \"member_id\": [\"r1i1231p1f1\"], \n",
    "    \"estimator_list\": [\"lgbm\", \"xgboost\", \"rf\", \"extra_tree\"], \n",
    "    \"time_budget\": 15, \n",
    "    \"features\": [\"FLNS\", \"FSNS\", \"PRECT\", \"PRSN\", \"TREFHT\"], \n",
    "    \"label\": [\"TREFMXAV\"]\n",
    "}\n",
    "\n",
    "with open(\"./config_cesm1.json\", \"w\") as outfile:\n",
    "    json.dump(cesm1, outfile, indent=4)\n",
    "\n",
    "with open(\"./config_cesm2.json\", \"w\") as outfile:\n",
    "    json.dump(cesm2, outfile, indent=4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fcf61e8",
   "metadata": {},
   "source": [
    "**How to load a JSON file using Python**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5f887f91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'model': 'cesm1',\n",
       " 'urban_type': 'md',\n",
       " 'city_loc': {'lat': 40.1164, 'lon': -88.2434},\n",
       " 'l_component': 'lnd',\n",
       " 'a_component': 'atm',\n",
       " 'experiment': 'RCP85',\n",
       " 'frequency': 'daily',\n",
       " 'cam_ls': ['TREFHT',\n",
       "  'TREFHTMX',\n",
       "  'FLNS',\n",
       "  'FSNS',\n",
       "  'PRECSC',\n",
       "  'PRECSL',\n",
       "  'PRECT',\n",
       "  'QBOT',\n",
       "  'UBOT',\n",
       "  'VBOT'],\n",
       " 'clm_ls': ['TREFMXAV_U'],\n",
       " 'forcing_variant': 'cmip6',\n",
       " 'time_start': '2081-01-02',\n",
       " 'time_end': '2100-12-31',\n",
       " 'member_id': [2],\n",
       " 'estimator_list': ['lgbm', 'xgboost', 'rf', 'extra_tree'],\n",
       " 'time_budget': 15,\n",
       " 'features': ['FLNS',\n",
       "  'FSNS',\n",
       "  'PRECT',\n",
       "  'PRSN',\n",
       "  'QBOT',\n",
       "  'TREFHT',\n",
       "  'UBOT',\n",
       "  'VBOT'],\n",
       " 'label': ['TREFMXAV_U']}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# CESM 1\n",
    "with open(\"./config_cesm1.json\",'r') as load_f:\n",
    "    param = json.load(load_f)\n",
    "param"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
